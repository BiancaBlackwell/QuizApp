{"version":3,"sources":["reportWebVitals.js","socket.js","Pages.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","socket","io","connect","BACKEND_URL","Landing","useState","userid","undefined","roomid","userRoomId","setUserRoomId","redirectToLobby","setRedirectToLobby","buttonEnabled","setButtonEnabled","lobbyCode","setlobbyCode","useEffect","axios","get","res","err","alert","joinRoom","a","console","log","createUserResponse","data","createRoomResponse","className","type","placeholder","onChange","e","target","value","onKeyPress","event","key","enabled","toString","style","width","onClick","to","pathname","state","GameStateHandler","props","currentPage","setCurrentPage","messages","setMessages","players","setPlayers","amHost","setAmHost","canStart","setCanStart","question","setQuestion","victoryStats","setVictoryStats","location","setUserId","status","on","msg","message","allMessages","push","newHost","firstquestion","nextquestion","emit","Lobby","Trivia","Victory","toLobby","setMessage","ready","setReady","colors","setColor","messagesEndRef","useRef","current","scrollIntoView","behavior","scrollToBottom","PlayerSidebar","id","textAlign","length","map","ind","ref","fontSize","name","toggle","toggleReady","backgroundColor","GameSettings","curTime","setCurTime","curNumQuestions","setCurNumQuestions","selectGamemode","choice","tmap","qmap","marginLeft","Tabs","defaultActiveKey","Tab","eventKey","title","tabClassName","Row","GamemodeButton","text","code","Col","InputGroup","Prepend","Text","border","color","DropdownButton","as","ButtonGroup","onSelect","Dropdown","Item","htmlFor","Button","variant","height","player","score","Question","submitAnswer","number","answers","slice","answer","index","AnswerButton","row","col","VictoryQuestions","questions","correct_answer","VictoryPodium","podium","topPlayers","div","ReactDOM","render","StrictMode","path","document","getElementById"],"mappings":"gMAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wKCFCQ,E,OAFFC,EAAGC,QAAH,UADM,0B,OCKbC,EAAc,wBAMpB,SAASC,IAEP,MAAoCC,mBAAS,CAACC,YAAQC,EAAWC,YAAQD,IAAzE,mBAAOE,EAAP,KAAmBC,EAAnB,KACA,EAA8CL,oBAAS,GAAvD,mBAAOM,EAAP,KAAwBC,EAAxB,KACA,EAA0CP,oBAAS,GAAnD,mBAAOQ,EAAP,KAAsBC,EAAtB,KACA,EAAkCT,mBAAS,IAA3C,mBAAOU,EAAP,KAAkBC,EAAlB,KAIAC,qBAAU,WAELR,EAAWH,QAAUG,EAAWD,QACjCU,IAAMC,IAAN,UAAahB,EAAb,6BAA6CM,EAAWH,OAAxD,YAAkEG,EAAWD,SAAUd,MAAK,SAAC0B,GAE3FR,GAAmB,MAClB,SAACS,GACFC,MAAM,qCAGT,CAACb,IAnBa,SAgCFc,IAhCE,2EAgCjB,4BAAAC,EAAA,6DAEEV,GAAiB,GACjBW,QAAQC,IAAI,iBAHd,SAIiCR,IAAMC,IAAN,UAAahB,EAAb,wBAJjC,OAIMwB,EAJN,OAKEF,QAAQC,IAAI,eAAiBX,GAG7BL,EAAc,CAACF,OAAQO,EAAWT,OAAQqB,EAAmBC,OAR/D,4CAhCiB,kEA2CjB,8BAAAJ,EAAA,6DAEEV,GAAiB,GACjBW,QAAQC,IAAI,iBAHd,SAIiCR,IAAMC,IAAN,UAAahB,EAAb,wBAJjC,cAIMwB,EAJN,OAKEF,QAAQC,IAAI,iBALd,SAMiCR,IAAMC,IAAN,UAAahB,EAAb,wBANjC,OAMM0B,EANN,OAQEJ,QAAQC,IAAI,CAAClB,OAAQqB,EAAmBD,KAAMtB,OAAQqB,EAAmBC,OAEzElB,EAAc,CAACF,OAAQqB,EAAmBD,KAAMtB,OAAQqB,EAAmBC,OAV7E,6CA3CiB,sBAwDjB,OACE,sBAAKE,UAAU,mBAAf,UACE,uBAAK,uBAAK,uBAAK,uBACf,qBAAKA,UAAU,sBAAf,SACE,oBAAIA,UAAU,yBAAd,wBAEF,uBAAK,uBAAK,uBACV,qBAAKA,UAAU,oDAAf,SACE,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,cAAf,UACA,uBAAOC,KAAK,OAAOD,UAAU,2BAA2BE,YAAY,aAAaC,SAAU,SAAAC,GAAC,OA5CnF,SAAAA,GACflB,EAAakB,EAAEC,OAAOC,OA2CgFH,CAASC,IAAIG,WAxClG,SAACC,GACA,UAAdA,EAAMC,KACRhB,OAuCM,sBAAKO,UAAU,kBAAf,UACE,wBAAQC,KAAK,SAASS,QAAW3B,EAAc4B,WAAYX,UAAU,wCAAwCY,MAAO,CAACC,MAAO,QAASC,QAAUrB,EAA/I,kBAECZ,GAAmB,cAAC,IAAD,CAAUkC,GAAI,CAChCC,SAAS,SAAD,OAAUrC,EAAWD,QAC7BuC,MAAO,CAAEvC,OAAQC,EAAWD,OAAQF,OAAQG,EAAWH,qBAQjE,qBAAKwB,UAAU,kBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,wBAAQC,KAAK,SAASS,QAAW3B,EAAc4B,WAAYX,UAAU,2BAA2Bc,QAlFvF,2CAkFT,oBAECjC,GAAmB,cAAC,IAAD,CAAUkC,GAAI,CAC9BC,SAAS,SAAD,OAAUrC,EAAWD,QAC7BuC,MAAO,CAAEvC,OAAQC,EAAWD,OAAQF,OAAQG,EAAWH,mBAcrE,SAAS0C,EAAiBC,GAOxB,MAAsC5C,mBAAS,SAA/C,mBAAO6C,EAAP,KAAoBC,EAApB,KACA,EAAgC9C,mBAAS,IAAzC,mBAAO+C,EAAP,KAAiBC,EAAjB,KACA,EAA8BhD,mBAAS,IAAvC,mBAAOiD,EAAP,KAAgBC,EAAhB,KACA,EAA4BlD,oBAAS,GAArC,mBAAOmD,EAAP,KAAeC,EAAf,KACA,EAAgCpD,oBAAS,GAAzC,mBAAOqD,EAAP,KAAiBC,EAAjB,KACA,EAAgCtD,mBAAS,IAAzC,mBAAOuD,EAAP,KAAiBC,EAAjB,KACA,EAAwCxD,mBAAS,IAAjD,mBAAOyD,EAAP,KAAqBC,EAArB,KAEA,EAA4B1D,oBAAS,WAEnC,OAAG4C,EAAMe,SAASjB,MAETE,EAAMe,SAASjB,MAAMvC,YAE5B,KANJ,mBAAOA,EAAP,KAWA,GAXA,KAW4BH,oBAAS,WAEnC,OAAG4C,EAAMe,SAASjB,MAETE,EAAMe,SAASjB,MAAMzC,YAE5B,MANJ,mBAAOA,EAAP,KAAe2D,EAAf,KAWAhD,qBAAU,gBAEMV,IAAXD,GACDY,IAAMC,IAAN,UAAahB,EAAb,wBAA+CT,MAAK,SAACiC,GACjB,MAA9BA,EAAmBuC,OAKvBD,EAAUtC,EAAmBC,MAJ3BN,MAAM,gDAQZtB,EAAOmE,GAAG,WAAW,SAAAC,GACnB3C,QAAQC,IAAI,sBAAwB0C,EAAIC,QAAU,UAAYD,EAAI9D,QAClE,IAAIgE,EAAclB,EAClBkB,EAAYC,KAAKH,GACjBf,EAAY,YAAIiB,OAGlBtE,EAAOmE,GAAG,iBAAiB,SAAAb,GACzB7B,QAAQC,IAAI,mBAAoB4B,GAChCC,EAAWD,MAGbtD,EAAOmE,GAAG,YAAY,WACpB1C,QAAQC,IAAI,gCACZiC,GAAY,MAGd3D,EAAOmE,GAAG,WAAW,WACnB1C,QAAQC,IAAI,+CACZiC,GAAY,MAGd3D,EAAOmE,GAAG,WAAW,SAAAK,GACnB/C,QAAQC,IAAI,eAAiB8C,EAAQlE,QAClCA,IAAWkE,EAAQlE,QACpBmD,GAAU,MAGdzD,EAAOmE,GAAG,UAAU,SAAAM,GAClBhD,QAAQC,IAAI,8CAA+C+C,GAC3DZ,EAAYY,GACZtB,EAAe,aAGjBnD,EAAOmE,GAAG,uBAAuB,SAAAO,GAC/BjD,QAAQC,IAAI,+BAAgCgD,GAC5Cb,EAAYa,MAGd1E,EAAOmE,GAAG,kBAAkB,SAAAL,GAC1BrC,QAAQC,IAAI,yCAA0CoC,GACtDC,EAAgBD,GAChBX,EAAe,cAIjBnD,EAAO2E,KAAK,WAAY,CAAC,OAAUnE,EAAQ,OAASF,MAGnD,IAwCH,OACE,gCACmB,UAAhB4C,GAA2B,cAAC0B,EAAD,CAAQpE,OAAUA,EAAQF,OAAUA,EAAQ8C,SAAUA,EAAUE,QAASA,EAASE,OAAQA,EAAQE,SAAUA,IACvH,WAAhBR,GAA4B,cAAC2B,EAAD,CAAQrE,OAAUA,EAAQF,OAAUA,EAAQgD,QAASA,EAASM,SAAYA,IACtF,YAAhBV,GAA6B,cAAC4B,EAAD,CAAStE,OAAUA,EAAQF,OAAUA,EAAQgD,QAASA,EAASyB,QAVjF,WACdtD,QAAQC,IAAI,wBACZ1B,EAAO2E,KAAK,cAAe,CAAC,OAAUnE,IACtC2C,EAAe,UAOkGW,aAAcA,OAUnI,SAASc,EAAT,GAAuE,IAAvDtE,EAAsD,EAAtDA,OAAQE,EAA8C,EAA9CA,OAAQ4C,EAAsC,EAAtCA,SAAUE,EAA4B,EAA5BA,QAASE,EAAmB,EAAnBA,OAAQE,EAAW,EAAXA,SAEzD,EAA8BrD,mBAAS,IAAvC,mBAAOgE,EAAP,KAAgBW,EAAhB,KACA,EAA0B3E,oBAAS,GAAnC,mBAAO4E,EAAP,KAAcC,EAAd,KACA,EAA2B7E,mBAAS,CAAC,gBAAkB,YAAvD,mBAAO8E,EAAP,KAAeC,EAAf,KACMC,EAAiBC,iBAAO,MAM9BrE,qBAAU,YAJa,WAAO,IAAD,EAC3B,UAAAoE,EAAeE,eAAf,SAAwBC,eAAe,CAAEC,SAAU,WAInDC,KACC,CAACtC,IAGJ,IAKMR,EAAU,WACE,KAAZyB,IAGJ5C,QAAQC,IAAI,qBAAuB2C,EAAU,aAAe7D,GAC5DR,EAAO2E,KAAK,cAAe,CAAC,OAASnE,EAAQ,OAASF,EAAQ,QAAU+D,IACxEW,EAAW,MAmBb,OACE,qBAAKlD,UAAU,mBAAf,SACE,sBAAKA,UAAU,MAAf,UAEE,cAAC6D,EAAD,CAAerC,QAASA,IAExB,sBAAKxB,UAAU,SAAf,UACE,uBACA,oBAAIA,UAAU,wCAAd,wBACA,oBAAGA,UAAU,kBAAkB8D,GAAG,MAAlC,UAAyCpC,EAAS,qBAAMlD,EAAO,qBAAQA,EAAvE,OACA,uBAAK,uBAAK,uBAEV,sBAAKwB,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,qBAAqBY,MAAO,CAACmD,UAAW,QAAvD,SACE,gCACwB,IAApBzC,EAAS0C,QAAgB,oBAAIhE,UAAU,sBAAd,8BAE1BsB,EAAS0C,OAAS,GAAK1C,EAAS2C,KAAK,SAAC3B,EAAK4B,GACxC,OACE,8BACkB,WAAf5B,EAAI9D,OAAoB,8BAAK,4BAAI8D,EAAIC,YAAmB,gCAAMD,EAAI9D,OAAV,KAAoB8D,EAAIC,YADzE2B,MAMhB,qBAAKC,IAAKZ,SAId,sBAAKvD,UAAU,cAAf,UACE,uBAAOC,KAAK,OAAOD,UAAU,mCAAmCY,MAAO,CAACwD,SAAU,OAAQlE,YAAY,WAAYI,MAAOiC,EAAS8B,KAAK,UAAUlE,SAAU,SAAAC,GAAC,OA7DzJ,SAAAA,GACf8C,EAAW9C,EAAEC,OAAOC,OA4DwJH,CAASC,IAAIG,WArCxK,SAACC,GACA,UAAdA,EAAMC,KACRK,OAoCU,wBAAQb,KAAK,SAASD,UAAU,2BAA2Bc,QAAS,kBAAMA,KAA1E,qBAGF,uBACA,qBAAKF,MAAO,CAACmD,UAAW,UAAxB,SACE,wBAAQ9D,KAAK,SAASD,UAAU,2BAA2Bc,QAAS,kBArD9D,WAClB,IAAIY,GAAWA,GAAUE,EAAU,CACjC,IAAI0C,GAAUnB,EACdxD,QAAQC,IAAI,4BAA8B0E,GAC1CpG,EAAO2E,KAAKyB,EAAO,YAAY,cAAe,CAAC,OAAS5F,EAAQ,OAASF,EAAQ,QAAU+D,IAC3Fe,EAASgB,EAAO,CAAC,gBAAkB,WAAW,CAAC,gBAAkB,YACjElB,EAASkB,IA+C2EC,IAAgB3D,MAAO,CAAC4D,gBAAgBnB,EAAOmB,iBAAzH,SAA4I9C,EAAO,QAAQ,eAK/J,cAAE+C,EAAF,eAaZ,SAASA,EAAatD,GAEpB,MAA8B5C,mBAAS,OAAvC,mBAAOmG,EAAP,KAAgBC,EAAhB,KACA,EAA8CpG,mBAAS,MAAvD,mBAAOqG,EAAP,KAAwBC,EAAxB,KAGMC,EAAiB,SAAAC,GACrBpF,QAAQC,IAAI,wBAAyBmF,IAGjCC,EAAO,CAAC,MAAO,MAAO,MAAO,UAM7BC,EAAO,CAAC,KAAM,KAAM,KAAM,UAMhC,OACE,qBAAKjF,UAAU,QAAQY,MAAO,CAACsE,WAAY,QAA3C,SAEE,eAACC,EAAA,EAAD,CAAMC,iBAAiB,UAAUtB,GAAG,2BAApC,UAEE,cAACuB,EAAA,EAAD,CAAKC,SAAS,OAAOC,MAAM,aAAaC,aAAa,kBAArD,SACE,eAACC,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACE,cAAC0F,EAAD,CAAgBC,KAAK,UAAUC,KAAM,EAAG9E,QAAUgE,IAClD,cAACY,EAAD,CAAgBC,KAAK,cAAcC,KAAM,EAAG9E,QAAUgE,IACtD,cAACY,EAAD,CAAgBC,KAAK,UAAUC,KAAM,EAAG9E,QAAUgE,SAItD,eAACO,EAAA,EAAD,CAAKC,SAAS,UAAUC,MAAM,WAAWC,aAAa,kBAAtD,UACE,eAACC,EAAA,EAAD,CAAKzF,UAAU,OAAf,UACE,cAAC6F,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAY9F,UAAU,yBAAtB,UACE,cAAC8F,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,CAAiBlC,GAAG,gBAAgBlD,MAAO,CAAC4D,gBAAiB,UAAWyB,OAAQ,UAAWC,MAAM,WAAjG,iCAEF,eAACC,EAAA,EAAD,CAAgBC,GAAIC,IAAad,MAAQb,EAAUZ,GAAG,qBAAqBwC,SA/BxE,SAAClG,GAChBT,QAAQC,IAAI,6BAA+BoF,EAAK5E,IAChDuE,EAAWK,EAAK5E,KA6BJ,UACE,cAACmG,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,iBACA,cAACiB,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,iBACA,cAACiB,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,iBACA,cAACiB,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,4BAIN,cAACO,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAY9F,UAAU,yBAAtB,UACE,cAAC8F,EAAA,EAAWC,QAAZ,UACE,cAACD,EAAA,EAAWE,KAAZ,CAAiBlC,GAAG,gBAAgBlD,MAAO,CAAC4D,gBAAiB,UAAWyB,OAAQ,UAAWC,MAAM,WAAjG,8BAEF,eAACC,EAAA,EAAD,CAAgBC,GAAIC,IAAad,MAAQX,EAAkBd,GAAG,qBAAqBwC,SAtC3E,SAAClG,GACrBT,QAAQC,IAAI,wCAA0CqF,EAAK7E,IAC3DyE,EAAmBI,EAAK7E,KAoCZ,UACE,cAACmG,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,gBACA,cAACiB,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,gBACA,cAACiB,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,gBACA,cAACiB,EAAA,EAASC,KAAV,CAAelB,SAAS,IAAxB,+BAMR,sBAAKtF,UAAU,WAAf,UACE,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,wBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,8BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,4BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,8BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,yBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,wBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,0BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,wBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,wBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,2BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,8BAKJ,sBAAKzG,UAAU,MAAf,UACE,sBAAKA,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,uBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,sBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,uBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,uBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,sBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,+BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,mCAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,uBAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,2BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,4BAEF,sBAAKzG,UAAU,aAAf,UACE,uBAAOA,UAAU,mBAAmBC,KAAK,aACzC,uBAAOD,UAAU,mBAAmByG,QAAQ,yBAA5C,oCAiBhB,SAASf,EAAevE,GAMtB,OACE,cAACuF,EAAA,EAAD,CAAQC,QAAQ,OAAO3G,UAAU,OAAOc,QALtB,WAClBK,EAAML,QAASK,EAAMyE,OAIrB,SAAiEzE,EAAMwE,OAO3E,SAAS9B,EAAc1C,GAGrB,OAAO,sBAAKnB,UAAU,4BAA4BY,MAAO,CAAEgG,OAAQ,SAA5D,UACL,uBAEA,oBAAIhG,MAAO,CAAEsF,MAAO,WAApB,qBACE/E,EAAMK,SAAWL,EAAMK,QAAQyC,KAAI,SAAC4C,EAAQ3C,GAG1C,OAAG2C,EAAOC,OAAS,EAEjB,sBAAK9G,UAAU,mBAA+BY,MAAO,CAAC4D,gBAAiBqC,EAAOrC,iBAA9E,UACE,oBAAIxE,UAAU,kBAAd,SAAiC6G,EAAOxC,OACxC,oBAAGrE,UAAU,YAAb,UAA0B6G,EAAOC,MAAjC,aAFuC5C,GAMzC,qBAAKlE,UAAU,mBAA+BY,MAAO,CAAC4D,gBAAiBqC,EAAOrC,iBAA9E,SACE,oBAAIxE,UAAU,kBAAd,SAAiC6G,EAAOxC,QADDH,SAanD,SAASnB,EAAT,GAAsD,IAArCvE,EAAoC,EAApCA,OAAQE,EAA4B,EAA5BA,OAAQ8C,EAAoB,EAApBA,QAASM,EAAW,EAAXA,SACxC,OACE,qBAAK9B,UAAU,mBAAf,SACE,sBAAKA,UAAU,MAAf,UACE,cAAC6D,EAAD,CAAgBrC,QAASA,IACzB,cAACuF,EAAD,CAAUvI,OAAQA,EAAQE,OAAQA,EAAQoD,SAAUA,SAU5D,SAASiF,EAAS5F,GAGhB,IAAM6F,EAAe,SAAAjC,GACnBpF,QAAQC,IAAI,sBAAsBmF,GAClC7G,EAAO2E,KAAK,eAAgB,CAAC,OAAS1B,EAAMzC,OAAQ,OAASyC,EAAM3C,OAAQ,OAASuG,KAGtF,OACE,sBAAK/E,UAAU,qBAAf,UACE,uBAAM,uBACN,oBAAIA,UAAU,YAAYY,MAAO,CAACsF,MAAO,WAAzC,SAAqD,+CAAmB/E,EAAMW,SAASmF,YACvF,qBAAKjH,UAAU,MAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,oBAAGA,UAAU,OAAOY,MAAO,CAACwD,SAAU,QAAtC,cAAkDjD,EAAMW,SAASA,SAAjE,aAIN,uBAEA,sBAAK9B,UAAU,MAAf,UACE,qBAAKA,UAAU,QAEXmB,EAAMW,SAASoF,QAAQC,MAAM,EAAE,GAAGlD,KAAI,SAACmD,EAAQC,GAC7C,OAAO,cAACC,EAAD,CAA0BF,OAAQA,EAAQJ,aAAcA,EAAcO,IAAK,EAAGC,IAAKH,GAAhEA,MAGhC,qBAAKrH,UAAU,WAEjB,uBACA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,QAEXmB,EAAMW,SAASoF,QAAQC,MAAM,GAAGlD,KAAI,SAACmD,EAAQC,GAC3C,OAAO,cAACC,EAAD,CAA0BF,OAAQA,EAAQJ,aAAcA,EAAcO,IAAK,EAAGC,IAAKH,GAAhEA,MAGhC,qBAAKrH,UAAU,cAWvB,SAASsH,EAAanG,GAEpB,IAAM8C,EAAM,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,IAKtB,OACE,qBAAKjE,UAAU,oBAAf,SACE,wBAAQA,UAAU,4CAA4Cc,QAN9C,WAClBK,EAAM6F,aAAc/C,EAAI9C,EAAMoG,KAAKpG,EAAMqG,OAKvC,SACIrG,EAAMiG,WAUhB,SAASK,EAAiBtG,GAIxB,OACE,sBAAKnB,UAAU,oCAAf,UACE,oBAAIA,UAAU,YAAYY,MAAO,CAACsF,MAAO,WAAzC,uBAEE/E,EAAMuG,WAAavG,EAAMuG,UAAUzD,KAAI,SAACnC,EAAUoC,GAChD,OACE,qBAAKlE,UAAU,0BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAIA,UAAU,kBAAd,sBAA0C8B,EAASmF,UACnD,mBAAGjH,UAAU,YAAb,SAA0B8B,EAASA,WACnC,qBAAK9B,UAAU,MAAf,SAEI8B,EAASoF,SAAWpF,EAASoF,QAAQjD,KAAI,SAACmD,EAAQlD,GAChD,OAAS,sBAAKlE,UAAU,MAAf,cAAkC8B,EAAS6F,iBAAmBzD,EAAO,6BAAKkD,IAAe,oBAAIpH,UAAU,aAAd,SAA4BoH,IAArH,MAA0BlD,YAPCA,SAwB1D,SAASlB,EAAT,GAAoD,IAAlCxB,EAAiC,EAAjCA,QAASyB,EAAwB,EAAxBA,QAASjB,EAAe,EAAfA,aAMlC,OACE,qBAAKhC,UAAU,mBAAf,SACE,sBAAKA,UAAU,MAAf,UAEE,cAAC6D,EAAD,CAAerC,QAASA,IAExB,sBAAKxB,UAAU,qBAAf,UAAoC,uBAClC,oBAAIA,UAAU,YAAYY,MAAO,CAACsF,MAAO,WAAzC,SAAqD,oDACrD,sBAAKlG,UAAU,YAAYY,MAAO,CAACgG,OAAQ,QAA3C,UAAoD,uBAElD,cAACgB,EAAD,CAAeC,OAAS7F,EAAa6F,SAErC,uBACA,wBAAQ5H,KAAK,SAASD,UAAU,gCAA+Bc,QAjBrD,WAClBmC,KAgBQ,6BACA,qBAAKjD,UAAU,YAAYY,MAAO,CAACgG,OAAQ,UAE3C,cAACa,EAAD,CAAkBC,UAAa1F,EAAa0F,uBAaxD,SAASE,EAAT,GAAiC,IAATC,EAAQ,EAARA,OACtB,OACE,qBAAK7H,UAAU,MAAf,SACE,qBAAKA,UAAU,MAAf,SACI6H,EAAOC,YAAcD,EAAOC,WAAW7D,KAAI,SAAC4C,EAAQ3C,GACpD,OACE,sBAAK6D,KAAG,EAAC/H,UAAwC,IAA7B6H,EAAOC,WAAW9D,OAAa,qBAAqB,qBAAxE,UACgC,IAA7B6D,EAAOC,WAAW9D,QAAgB,qBAAKhE,UAAU,QAClD,sBAAKA,UAAU,MAAf,UACE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,YAAYY,MAAO,CAAEgG,OAAQC,EAAOD,OAAO,QAC1D,oBAAI5G,UAAU,kBAAd,SAAiC6G,EAAOxC,OACxC,oBAAGrE,UAAU,YAAb,UAA0B6G,EAAOC,MAAjC,cAEF,qBAAK9G,UAAU,MAAf,SACE,6BAAKkE,EAAI,SAGiB,IAA7B2D,EAAOC,WAAW9D,QAAgB,qBAAKhE,UAAU,UAZ+CkE,UC7tB/G8D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,gBAAgBF,OAAQ,SAAC9G,GAAD,OAAW,cAACD,EAAD,eAAsBC,OACrE,cAAC,IAAD,CAAOgH,KAAK,IAAZ,SACE,cAAC7J,EAAD,aAKR8J,SAASC,eAAe,SAM1B5K,K","file":"static/js/main.e3bdfdcd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import io from \"socket.io-client\";\r\n\r\nconst SOCKET_URL = \"http://localhost:5000\"\r\nlet socket = io.connect(`${SOCKET_URL}`);\r\n\r\nexport default socket;","import \"./Pages.css\";\r\nimport axios from \"axios\";\r\nimport { Redirect, useParams } from \"react-router-dom\";\r\nimport React, { useEffect, useState, useRef } from 'react';\r\nimport {Tabs, Tab, ButtonGroup, Button, InputGroup, ButtonToolbar, DropdownButton, Dropdown, Row, Form, Col} from 'react-bootstrap'\r\nimport socket from \"./socket\";\r\n\r\nconst BACKEND_URL = \"http://localhost:5000\"\r\n\r\n\r\n\r\n\r\n\r\nfunction Landing() {\r\n\r\n  const [userRoomId, setUserRoomId] = useState({userid: undefined, roomid: undefined});\r\n  const [redirectToLobby, setRedirectToLobby] = useState(false);\r\n  const [buttonEnabled, setButtonEnabled] = useState(true);\r\n  const [lobbyCode, setlobbyCode] = useState(\"\");\r\n\r\n\r\n  // this effect gets run whenever userRoomId gets updated (because it's in the array we provide as an argument) -- in this case, after we get it from the backend in createAndJoinRoom\r\n  useEffect(() => {\r\n    // make sure they're both set\r\n    if(userRoomId.userid && userRoomId.roomid){\r\n      axios.get(`${BACKEND_URL}/backend/joinRoom/${userRoomId.userid}=${userRoomId.roomid}`).then((res) => {\r\n        // useEffect functions can't be async so we're using .then \r\n        setRedirectToLobby(true);\r\n      }, (err) => {\r\n        alert(\"Failed to join lobby, sorry!\");\r\n      });\r\n    }\r\n  }, [userRoomId])\r\n\r\n  // On Change\r\n  const onChange = e => {\r\n    setlobbyCode(e.target.value);\r\n  };\r\n\r\n  const checkEnter = (event) => {\r\n    if (event.key === 'Enter') {\r\n      joinRoom()\r\n    }\r\n  }\r\n\r\n  async function joinRoom(){\r\n    // disable the create button while we're loading\r\n    setButtonEnabled(false);\r\n    console.log('Creating User');\r\n    let createUserResponse = await axios.get(`${BACKEND_URL}/backend/createUser`);\r\n    console.log('Joining Room' + lobbyCode);\r\n\r\n    // all we need to do here is set the state, the effect handles the join and redirect\r\n    setUserRoomId({roomid: lobbyCode, userid: createUserResponse.data});\r\n  };\r\n\r\n  async function createAndJoinRoom(){\r\n    // disable the create button while we're loading\r\n    setButtonEnabled(false);\r\n    console.log('Creating User');\r\n    let createUserResponse = await axios.get(`${BACKEND_URL}/backend/createUser`);\r\n    console.log('Creating Room');\r\n    let createRoomResponse = await axios.get(`${BACKEND_URL}/backend/createRoom`);\r\n\r\n    console.log({roomid: createRoomResponse.data, userid: createUserResponse.data})\r\n    // all we need to do here is set the state, the effect handles the join and redirect\r\n    setUserRoomId({roomid: createRoomResponse.data, userid: createUserResponse.data});\r\n  }\r\n\r\n  return (\r\n    <div className=\"coontainer-fluid\">\r\n      <br/><br/><br/><br/>\r\n      <div className=\"row text-center m-3\">\r\n        <h1 className=\"text-nowrap main-title\">Quiz App</h1>\r\n      </div>\r\n      <br/><br/><br/>\r\n      <div className=\"row align-items-center justify-content-center m-3\">\r\n        <div className=\"col-3\">\r\n          <div className=\"input-group\">\r\n          <input type=\"text\" className=\"form-control text-nowrap\" placeholder=\"Lobby Code\" onChange={e => onChange(e)} onKeyPress={ checkEnter } />\r\n            <div className=\"input-group-btn\">\r\n              <button type=\"submit\" enabled = {buttonEnabled.toString()} className=\"btn btn-dark text-nowrap form-control\" style={{width: \"auto\"}} onClick={ joinRoom } >Join</button>\r\n              \r\n              {redirectToLobby && <Redirect to={{\r\n                pathname:`/game/${userRoomId.roomid}`, \r\n                state: { roomid: userRoomId.roomid, userid: userRoomId.userid } // this is accessed with props.location.state.userid in the lobby component. fine to pass as a prop b/c it won't change\r\n                }} \r\n              />}\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"row text-center\">\r\n        <div className=\"col\">\r\n          <button type=\"submit\" enabled = {buttonEnabled.toString()} className=\"btn btn-dark text-nowrap\" onClick={ createAndJoinRoom }>Create</button>\r\n\r\n          {redirectToLobby && <Redirect to={{\r\n              pathname:`/game/${userRoomId.roomid}`, \r\n              state: { roomid: userRoomId.roomid, userid: userRoomId.userid } // this is accessed with props.location.state.userid in the lobby component. fine to pass as a prop b/c it won't change\r\n            }} \r\n          />}\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction GameStateHandler(props) {\r\n\r\n  // NOTE: this component is where we'll do all the fancy webhook stuff\r\n  // and pass the results to the children\r\n\r\n  // track what part of the game UI we want to display\r\n  // this should be either lobby, game, or victory\r\n  const [currentPage, setCurrentPage] = useState(\"lobby\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [players, setPlayers] = useState([]);\r\n  const [amHost, setAmHost] = useState(false);\r\n  const [canStart, setCanStart] = useState(false);\r\n  const [question, setQuestion] = useState({});\r\n  const [victoryStats, setVictoryStats] = useState([]);\r\n\r\n  const [roomid, setRoomId] = useState(() => {\r\n    // function args to useState are run once to get the intial value\r\n    if(props.location.state){\r\n      // this will be the userid that gets passed from the redirect of the Lobby component\r\n      return props.location.state.roomid;\r\n    } else{\r\n      return undefined;\r\n    }\r\n  });\r\n\r\n  // since anyone can click this link we cannot rely on the userid prop being filled here\r\n  const [userid, setUserId] = useState(() => {\r\n    // function args to useState are run once to get the intial value\r\n    if(props.location.state){\r\n      // this will be the userid that gets passed from the redirect of the Lobby component\r\n      return props.location.state.userid;\r\n    } else{\r\n      return undefined;\r\n    }\r\n  });\r\n\r\n  // handle creating the userid if the person came here by clicking the link\r\n  useEffect(() => {\r\n\r\n    if(userid === undefined){\r\n      axios.get(`${BACKEND_URL}/backend/createUser`).then((createUserResponse) => {\r\n        if (createUserResponse.status !== 200) {\r\n          alert(\"Wasn't able to create your userid, sorry!\");\r\n          return;\r\n        }\r\n\r\n        setUserId(createUserResponse.data);\r\n      });\r\n    }\r\n\r\n    socket.on(\"message\", msg => {\r\n      console.log('Recieved message: [' + msg.message + '] from ' + msg.userid);\r\n      let allMessages = messages;\r\n      allMessages.push(msg);\r\n      setMessages([...allMessages]);\r\n    });\r\n\r\n    socket.on(\"updatePlayers\", players => {\r\n      console.log('Updating Players', players);\r\n      setPlayers(players);\r\n    });\r\n\r\n    socket.on(\"yesStart\", () => {\r\n      console.log(\"Host can now start the game!\");\r\n      setCanStart(true);\r\n    });\r\n\r\n    socket.on(\"noStart\", () => {\r\n      console.log(\"Not enough players ready to start the game!\");\r\n      setCanStart(false);\r\n    });\r\n\r\n    socket.on(\"newHost\", newHost => {\r\n      console.log(\"New Host is \" + newHost.userid);\r\n      if(userid === newHost.userid)\r\n        setAmHost(true);\r\n    });\r\n\r\n    socket.on(\"trivia\", firstquestion => {\r\n      console.log(\"Everyone is ready! Now starting the Trivia!\", firstquestion);\r\n      setQuestion(firstquestion);\r\n      setCurrentPage(\"trivia\");\r\n    });\r\n\r\n    socket.on(\"displayNextQuestion\", nextquestion =>{\r\n      console.log(\"Displaying the Next Question\", nextquestion);\r\n      setQuestion(nextquestion);\r\n    });\r\n\r\n    socket.on(\"outOfQuestions\", victoryStats =>{\r\n      console.log(\"End of Round! Displaying Victory Page!\", victoryStats);\r\n      setVictoryStats(victoryStats);\r\n      setCurrentPage(\"victory\");\r\n\r\n    });\r\n\r\n    socket.emit(\"identify\", {\"roomid\": roomid, \"userid\":userid});\r\n\r\n    // passing an empty array to useEffect makes it run once when the component is mounted\r\n  }, []);\r\n\r\n  /*\r\n******************************\r\nATTEMPTED DISSCONNECT STUFF\r\n*******************************\r\nONLY WANTS TO TRIGGER SOMETIMES\r\n\r\n\r\n  // this also doesn't work\r\n  const onDisconnect = (e) => {\r\n\r\n    //=======always triggers if used\r\n    e.preventDefault();\r\n    e.returnValue = \"\"\r\n    //=======\r\n\r\n    console.log(\"Disconnecting User\");\r\n    socket.emit(\"sendMessage\", {'message':'Did it work??', \"userid\":userid, \"roomid\":roomid});\r\n    //socket.emit(\"disconnectUser\", {\"roomid\":roomid, \"userid\":userid});\r\n    //socket.removeAllListeners();\r\n    //socket.disconnect();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    // this also doesn't work\r\n    window.addEventListener('beforeunload', onDisconnect);\r\n   return () => {\r\n      window.removeEventListener('beforeunload', onDisconnect);\r\n    }\r\n  }, [onDisconnect]);\r\n*/\r\n\r\n  const toLobby = () => {\r\n    console.log('Going back to Lobby!');\r\n    socket.emit(\"clearScores\", {\"roomid\": roomid});\r\n    setCurrentPage('lobby');\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {currentPage === \"lobby\" && <Lobby  roomid = {roomid} userid = {userid} messages={messages} players={players} amHost={amHost} canStart={canStart}/>}\r\n      {currentPage === \"trivia\" && <Trivia roomid = {roomid} userid = {userid} players={players} question= { question }/>}\r\n      {currentPage === \"victory\" && <Victory roomid = {roomid} userid = {userid} players={players} toLobby={toLobby} victoryStats={victoryStats}/>}\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n// can use destructuring here to be more explict abt what we pass as props\r\nfunction Lobby({userid, roomid, messages, players, amHost, canStart}) {\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [ready, setReady] = useState(false);\r\n  const [colors, setColor] = useState({\"backgroundColor\":\"#464866\"});\r\n  const messagesEndRef = useRef(null)\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\r\n  }\r\n\r\n  useEffect(() => {\r\n    scrollToBottom()\r\n  }, [messages]);\r\n\r\n  // On Change\r\n  const onChange = e => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  // On Click\r\n  const onClick = () => {\r\n    if (message === \"\") {\r\n      return;\r\n    }\r\n    console.log('Sending message: [' + message + '] to room ' + roomid);\r\n    socket.emit(\"sendMessage\", {\"roomid\":roomid, \"userid\":userid, \"message\":message});\r\n    setMessage(\"\");\r\n  };\r\n\r\n  const toggleReady = () => {\r\n    if(!amHost || (amHost && canStart)){\r\n      let toggle = !ready;\r\n      console.log('Toggling ready state to: ' + toggle);\r\n      socket.emit(toggle?\"readyUser\":\"unreadyUser\", {\"roomid\":roomid, \"userid\":userid, \"message\":message});\r\n      setColor(toggle?{\"backgroundColor\":\"#25274d\"}:{\"backgroundColor\":\"#464866\"});\r\n      setReady(toggle);\r\n    }\r\n  };\r\n\r\n  const checkEnter = (event) => {\r\n    if (event.key === 'Enter') {\r\n      onClick();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"coontainer-fluid\">\r\n      <div className=\"row\">\r\n\r\n        <PlayerSidebar players={players}/>\r\n\r\n        <div className=\"col-10\">\r\n          <br/>\r\n          <h1 className=\"lobby-heading text-center text-middle\">Main Lobby</h1>\r\n          <p className=\"uid text-center\" id=\"uid\">{amHost ? \"★★★\"+userid+\"★★★\" : userid} </p>\r\n          <br/><br/><br/>\r\n\r\n          <div className=\"row\">\r\n            <div className=\"col-6\">\r\n              <div className=\"row message_holder\" style={{textAlign: \"left\"}}>\r\n                <div>\r\n                  { messages.length === 0 && <h3 className=\"message_placeholder\">No message yet..</h3> }\r\n\r\n                  {messages.length > 0 && messages.map( (msg, ind) => {\r\n                      return (\r\n                        <div key={ind}>\r\n                          {msg.userid === \"server\"?<div><b>{msg.message}</b></div>:<div>{msg.userid}: {msg.message}</div>}\r\n                        </div>\r\n                      )\r\n                    })\r\n                  }\r\n                  <div ref={messagesEndRef} />\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"input-group\">\r\n                <input type=\"text\" className=\"text-nowrap form-control message\" style={{fontSize: \"18px\", placeholder:\"Message\"}} value={message} name=\"message\" onChange={e => onChange(e)} onKeyPress={ checkEnter }  />\r\n                <button type=\"submit\" className=\"btn btn-dark text-nowrap\" onClick={() => onClick()}>Send</button>\r\n              </div>\r\n\r\n              <br/>\r\n              <div style={{textAlign: \"center\"}}>\r\n                <button type=\"submit\" className=\"btn btn-dark text-nowrap\" onClick={() => toggleReady() } style={{backgroundColor:colors.backgroundColor}}>{amHost?'Start':'Ready'}</button>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            < GameSettings />   \r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction GameSettings(props) {\r\n\r\n  const [curTime, setCurTime] = useState(\"10s\");\r\n  const [curNumQuestions, setCurNumQuestions] = useState(\"15\");\r\n\r\n\r\n  const selectGamemode = choice => {\r\n    console.log('Submitting Gamemode: '+ choice);\r\n  };\r\n\r\n  const tmap = [\"15s\", \"30s\", \"60s\", \"∞\"];\r\n  const handleTime=(e)=>{\r\n    console.log('Changing Time Control to: ' + tmap[e]);\r\n    setCurTime(tmap[e]);\r\n  }\r\n\r\n  const qmap = [\"10\", \"15\", \"20\", \"∞\"];\r\n  const handleQuestions=(e)=>{\r\n    console.log('Changing the Number of Questions to: ' + qmap[e]);\r\n    setCurNumQuestions(qmap[e]);\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-5\" style={{marginLeft: \"15px\"}}>\r\n\r\n      <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\">\r\n\r\n        <Tab eventKey=\"home\" title=\"Quick Play\" tabClassName=\"profile-tabitem\">\r\n          <Row className=\"mt-1\">\r\n            <GamemodeButton text=\"Classic\" code={0} onClick={ selectGamemode }/>\r\n            <GamemodeButton text=\"Speed Round\" code={1} onClick={ selectGamemode }/>\r\n            <GamemodeButton text=\"Endless\" code={2} onClick={ selectGamemode }/>\r\n          </Row>\r\n       </Tab>\r\n\r\n        <Tab eventKey=\"profile\" title=\"Advanced\" tabClassName=\"profile-tabitem\">\r\n          <Row className=\"mt-2\">\r\n            <Col>\r\n              <InputGroup className=\"justify-content-center\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"btnGroupAddon\" style={{backgroundColor: \"#85c3cf\", border: \"#25274d\", color:\"#212121\"}}>Time per Question</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <DropdownButton as={ButtonGroup} title={ curTime } id=\"bg-nested-dropdown\" onSelect={ handleTime }>\r\n                  <Dropdown.Item eventKey=\"0\">15s</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"1\">30s</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">60s</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\">∞</Dropdown.Item>\r\n                </DropdownButton>\r\n              </InputGroup>\r\n            </Col>\r\n            <Col>\r\n              <InputGroup className=\"justify-content-center\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text id=\"btnGroupAddon\" style={{backgroundColor: \"#85c3cf\", border: \"#25274d\", color:\"#212121\"}}># of Questions</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <DropdownButton as={ButtonGroup} title={ curNumQuestions } id=\"bg-nested-dropdown\" onSelect={ handleQuestions }>\r\n                  <Dropdown.Item eventKey=\"0\">10</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"1\">15</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"2\">20</Dropdown.Item>\r\n                  <Dropdown.Item eventKey=\"3\">∞</Dropdown.Item>\r\n                </DropdownButton>\r\n              </InputGroup>\r\n            </Col>\r\n          </Row>\r\n          \r\n          <div className=\"row mt-3\">\r\n            <div className=\"col\">\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Animals</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Brain Teasers</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Celebrities</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Entertainment</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">For Kids</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">General</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Geography</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">History</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Hobbies</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Humanities</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Literature</label>\r\n              </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"col\">\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Movies</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Music</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Newest</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">People</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Rated</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Religion/Faith</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Science/Technology</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Sports</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">Television</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Video Games</label>\r\n              </div>\r\n              <div className=\"form-check\">\r\n                <input className=\"form-check-input\" type=\"checkbox\" />\r\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckChecked\">World</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </Tab>\r\n\r\n      </Tabs>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction GamemodeButton(props){\r\n\r\n  const handleClick = () => {\r\n    props.onClick( props.code );\r\n  }\r\n\r\n  return (\r\n    <Button variant=\"dark\" className=\"mt-2\" onClick={ handleClick }>{props.text}</Button>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nfunction PlayerSidebar(props) {\r\n  // let's have props.players be a array of objects, each with a name and optionally a score\r\n\r\n  return <div className=\"col-2 sidebar text-center\" style={{ height: \"100vh\" }}>\r\n    <br />\r\n\r\n    <h3 style={{ color: \"#e8f9fc\" }}>Players</h3>\r\n    { props.players && props.players.map((player, ind) => {\r\n        // we want this component to be able to be used on both the lobby and game screen\r\n        // so we should not expect it to always have a score\r\n        if(player.score >= 0){\r\n          return (\r\n          <div className=\"player card mb-2\" key = {ind} style={{backgroundColor: player.backgroundColor }}>\r\n            <h5 className=\"card-title mb-0\">{player.name}</h5>\r\n            <p className=\"card-text\">{player.score} pts.</p>\r\n          </div>)\r\n        } else {\r\n          return (\r\n          <div className=\"player card mb-2\" key = {ind} style={{backgroundColor: player.backgroundColor }}>\r\n            <h5 className=\"card-title mb-0\">{player.name}</h5>\r\n          </div>)\r\n        }\r\n      })\r\n    }\r\n  </div>;\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Trivia({userid, roomid, players, question}) {\r\n  return (\r\n    <div className=\"coontainer-fluid\">\r\n      <div className=\"row\">\r\n        <PlayerSidebar  players={players}/>\r\n        <Question userid={userid} roomid={roomid} question={question}/>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Question(props) {\r\n  // props.question.name => string and props.question.answers => array of string answers\r\n\r\n  const submitAnswer = choice => {\r\n    console.log('Submitting Answer: '+choice);\r\n    socket.emit(\"submitAnswer\", {\"roomid\":props.roomid, \"userid\":props.userid, \"answer\":choice});\r\n  };\r\n\r\n  return (\r\n    <div className=\"col-10 text-center\">\r\n      <br /><br />\r\n      <h1 className=\"display-3\" style={{color: \"#212121\"}}><strong>Question { props.question.number }</strong></h1>\r\n      <div className=\"row\">\r\n        <div className=\"col-8 offset-2\">\r\n          <div className=\"jumbotron\">\r\n            <p className=\"lead\" style={{fontSize: \"25pt\"}}> { props.question.question } </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <br />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n          { // we want two answers in this column and the other two in the other column\r\n            props.question.answers.slice(0,2).map((answer, index) => {\r\n              return <AnswerButton key={index} answer={answer} submitAnswer={submitAnswer} row={0} col={index}/>\r\n            })\r\n          }\r\n        <div className=\"col\"></div>\r\n      </div>\r\n      <br />\r\n      <div className=\"row\">\r\n        <div className=\"col\"></div>\r\n          { // we want two answers in this column and the other two in the other column\r\n            props.question.answers.slice(2).map((answer, index) => {\r\n              return <AnswerButton key={index} answer={answer} submitAnswer={submitAnswer} row={1} col={index}/>\r\n            })\r\n          }\r\n        <div className=\"col\"></div>\r\n      </div>\r\n\r\n   </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction AnswerButton(props){\r\n\r\n  const map = [[0,1],[2,3]];\r\n  const handleClick = () => {\r\n    props.submitAnswer( map[props.row][props.col] );\r\n  }\r\n\r\n  return (\r\n    <div className=\"col-3 same-height\">\r\n      <button className=\"btn btn-primary btn-lg answer w-100 h-100\" onClick={ handleClick }>\r\n        { props.answer }\r\n      </button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction VictoryQuestions(props) {\r\n  // const questions = [{ question: 'underwear?', correct_answer: 0, answers:[\"yes\", \"no\"]}, { question: 'underwear?', correct_answer: 3, answers:[\"yes\", \"no\", \"hell no\", \"hell yeah\"]}];\r\n\r\n  // props.questions => a array of objects, each with a question, an array of answers, and an int corresponding to the correct answer\r\n  return (          \r\n    <div className=\"row d-flex justify-content-center\">\r\n      <h2 className=\"display-3\" style={{color: \"#212121\"}}>Questions</h2>   \r\n      {\r\n        props.questions && props.questions.map((question, ind) => {\r\n          return (\r\n            <div className=\"card question mb-3 w-75\" key={ind}>\r\n              <div className=\"card-body\">\r\n                <h5 className=\"card-title mb-0\">Question {question.number}</h5>\r\n                <p className=\"card-text\">{question.question}</p>\r\n                <div className=\"row\">\r\n                  {\r\n                    question.answers && question.answers.map((answer, ind) => {\r\n                      return ( <div className=\"col\" key={ind}> {(question.correct_answer === ind) ? <h6>{answer}</h6> : <h6 className=\"text-muted\">{answer}</h6>} </div> )\r\n                    })\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction Victory({players, toLobby, victoryStats}) {\r\n\r\n  const handleClick = () => {\r\n    toLobby();\r\n  }\r\n\r\n  return (\r\n    <div className=\"coontainer-fluid\">\r\n      <div className=\"row\">\r\n\r\n        <PlayerSidebar players={players}/>\r\n\r\n        <div className=\"col-10 text-center\"><br/>\r\n          <h1 className=\"display-3\" style={{color: \"#212121\"}}><strong>Final Scores</strong></h1>\r\n          <div className=\"col-xs-12\" style={{height: \"20px\"}}><br/>\r\n\r\n            <VictoryPodium podium={ victoryStats.podium }/>\r\n            \r\n            <br/>\r\n            <button type=\"submit\" className=\"btn btn-dark text-nowrap w-75\"onClick={ handleClick }>Return to Lobby</button>\r\n            <div className=\"col-xs-12\" style={{height: \"20px\"}}></div> \r\n\r\n            <VictoryQuestions questions = {victoryStats.questions}/>\r\n\r\n          </div>\r\n        </div>\r\n      </div>  \r\n    </div>  \r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nfunction VictoryPodium({podium}){\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"row\">\r\n        { podium.topPlayers && podium.topPlayers.map((player, ind) => {\r\n          return(\r\n            <div div className={podium.topPlayers.length === 1?\"row align-self-end\":\"col align-self-end\"} key={ind}>\r\n              {podium.topPlayers.length === 1 && <div className=\"col\"></div>}\r\n              <div className=\"col\">\r\n                <div className=\"card player\">\r\n                  <div className=\"col-xs-12\" style={{ height: player.height+\"px\" }}></div>\r\n                  <h5 className=\"card-title mb-0\">{player.name}</h5>\r\n                  <p className=\"card-text\">{player.score} pts.</p>\r\n                </div>\r\n                <div className=\"col\">\r\n                  <h5>{ind+1}</h5>\r\n                </div>\r\n              </div>\r\n              {podium.topPlayers.length === 1 && <div className=\"col\"></div>}\r\n            </div>\r\n          )})\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport { Landing, Trivia, Lobby, PlayerSidebar, Victory, Question, GameStateHandler, AnswerButton};","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link\r\n} from \"react-router-dom\";\r\n\r\nimport { Landing, GameStateHandler} from './Pages';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/game/:roomId\" render={(props) => <GameStateHandler {...props} />} />\r\n        <Route path=\"/\">\r\n          <Landing></Landing>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}